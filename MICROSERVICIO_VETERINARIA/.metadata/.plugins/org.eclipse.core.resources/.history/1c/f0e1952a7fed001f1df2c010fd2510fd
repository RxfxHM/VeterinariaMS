package com.mx.Responsables.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.mx.Responsables.Entity.Responsables;
import com.mx.Responsables.Service.ResponsablesServiceImp;

@RestController
@RequestMapping ("/Responsables")
@CrossOrigin
public class ResponsablesWS {

	//Inyeccion de dependencias
	@Autowired
	private ResponsablesServiceImp service;
	
	
	//Endpoints
	//Guardar
	//http://localhost:8002/Responsables/listar
	@GetMapping("/listar")
	public ResponseEntity<List<Responsables>> listar(){
		List<Responsables> list = service.listarResponsables();
		if(list.isEmpty()) {
			return ResponseEntity.status(HttpStatus.NO_CONTENT).build();
		}else {
			return ResponseEntity.status(HttpStatus.OK).body(list);
		}
	}
	
	
	//guardar
	//http://localhost:8002/Responsables/guardar
	@PostMapping("/guardar")
	public ResponseEntity<?> guardar(@RequestBody Responsables responsable){
		Responsables respon = service.guardarResponsable(responsable);
		if(respon == null) {
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
		}else {
			return ResponseEntity.status(HttpStatus.OK).body(respon);
		}
	}
	
	//editar
	//http://localhost:8002/Responsables/editar
	@PutMapping("/editar")
	public ResponseEntity<?> editar(@RequestBody Responsables responsable){
		Responsables respon = service.editarResponsable(responsable);
		if(respon == null) {
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
		}else{
			return ResponseEntity.status(HttpStatus.OK).body(respon);
		}
	}
	
	//eliminar
	//http://localhost:8002/Responsables/eliminar/{}
	@DeleteMapping("/eliminar/{idResponsable}")
	public ResponseEntity<?> eliminar(@PathVariable Long idResponsable){
		Responsables respon = service.eliminarResponsables(idResponsable);
		if(respon == null) {
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
		}else {
			return ResponseEntity.status(HttpStatus.OK).body(respon);
		}
	}
	
	//buscar
	//http://localhost:8002/Responsables/buscar
	@GetMapping("/buscar/{idResponsable}")
	public ResponseEntity<?> buscar(@PathVariable Long idResponsable){
		Responsables respo = service.buscarResponsable(idResponsable);
		if(respo == null) {
			return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
		}else {
			return ResponseEntity.status(HttpStatus.OK).body(respo);
		}
		
	}
	
	//Buscar por veterinaria
	@PostMapping("veterinarias/{veterinariaId}")
	public ResponseEntity<List<Responsables>> obtenerPorVeterinariaId(@PathVariable Long veterinariaId){
		return ResponseEntity.status(HttpStatus.OK).body(service.getByVeterinariaId(veterinariaId));
	}
}
